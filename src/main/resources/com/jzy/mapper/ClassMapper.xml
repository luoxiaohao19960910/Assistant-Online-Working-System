<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzy.dao.ClassMapper">
    <resultMap id="BaseColumnResultMap" type="com.jzy.model.entity.BaseEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.jzy.model.entity.Class" extends="BaseColumnResultMap">
        <result column="class_id" property="classId" jdbcType="VARCHAR"/>
        <result column="class_name" property="className" jdbcType="VARCHAR"/>
        <result column="class_campus" property="classCampus" jdbcType="VARCHAR"/>
        <result column="class_grade" property="classGrade" jdbcType="VARCHAR"/>
        <result column="class_subject" property="classSubject" jdbcType="VARCHAR"/>
        <result column="class_type" property="classType" jdbcType="VARCHAR"/>
        <result column="class_year" property="classYear" jdbcType="VARCHAR"/>
        <result column="class_season" property="classSeason" jdbcType="VARCHAR"/>
        <result column="class_sub_season" property="classSubSeason" jdbcType="VARCHAR"/>
        <result column="class_time" property="classTime" jdbcType="VARCHAR"/>
        <result column="class_simplified_time" property="classSimplifiedTime" jdbcType="VARCHAR"/>
        <result column="class_times" property="classTimes" jdbcType="INTEGER"/>
        <result column="class_teacher_id" property="classTeacherId" jdbcType="BIGINT"/>
        <result column="class_assistant_id" property="classAssistantId" jdbcType="BIGINT"/>
        <result column="classroom" property="classroom" jdbcType="VARCHAR"/>
        <result column="class_teacher_requirement" property="classTeacherRequirement" jdbcType="VARCHAR"/>
        <result column="class_remark" property="classRemark" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ClassDetailedResultMap" type="com.jzy.model.dto.ClassDetailedDto" extends="BaseResultMap">
        <result column="assistant_name" property="assistantName" jdbcType="VARCHAR"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="class_student_count" property="classStudentsCount" jdbcType="BIGINT"/>
        <result column="classroom_capacity" property="classroomCapacity" jdbcType="INTEGER"/>
    </resultMap>
    <insert id="insertOneClass" parameterType="com.jzy.model.dto.ClassDetailedDto">
        insert into class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classId != null and classId!=''">
                class_id,
            </if>
            <if test="className != null and className!=''">
                class_name,
            </if>
            <if test="classCampus != null and classCampus!=''">
                class_campus,
            </if>
            <if test="classGrade != null and classGrade!=''">
                class_grade,
            </if>
            <if test="classSubject != null and classSubject!=''">
                class_subject,
            </if>
            <if test="classType != null and classType!=''">
                class_type,
            </if>
            <if test="classYear != null and classYear!=''">
                class_year,
            </if>
            <if test="classSeason != null and classSeason != ''">
                class_season,
            </if>
            <if test="classSubSeason != null and classSubSeason != ''">
                class_sub_season,
            </if>
            <if test="classTime != null and classTime!=''">
                class_time,
            </if>
            <if test="classSimplifiedTime != null and classSimplifiedTime!=''">
                class_simplified_time,
            </if>
            <if test="classTimes != null">
                class_times,
            </if>
            <if test="teacherName != null and teacherName!=''">
                class_teacher_id,
            </if>
            <if test="assistantName != null and assistantName!=''">
                class_assistant_id,
            </if>
            <if test="classroom != null and classroom!=''">
                classroom,
            </if>
            <if test="classTeacherRequirement != null and classTeacherRequirement!=''">
                class_teacher_requirement,
            </if>
            <if test="classRemark != null and classRemark!=''">
                class_remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classId != null and classId!=''">
                #{classId},
            </if>
            <if test="className != null and className!=''">
                #{className},
            </if>
            <if test="classCampus != null and classCampus!=''">
                #{classCampus},
            </if>
            <if test="classGrade != null and classGrade!=''">
                #{classGrade},
            </if>
            <if test="classSubject != null and classSubject!=''">
                #{classSubject},
            </if>
            <if test="classType != null and classType!=''">
                #{classType},
            </if>
            <if test="classYear != null and classYear!=''">
                #{classYear},
            </if>
            <if test="classSeason != null and classSeason != ''">
                #{classSeason},
            </if>
            <if test="classSubSeason != null and classSubSeason != ''">
                #{classSubSeason},
            </if>
            <if test="classTime != null and classTime!=''">
                #{classTime},
            </if>
            <if test="classSimplifiedTime != null and classSimplifiedTime!=''">
                #{classSimplifiedTime},
            </if>
            <if test="classTimes != null">
                #{classTimes},
            </if>
            <if test="teacherName != null and teacherName!=''">
                (select id from teacher where teacher_name=#{teacherName}),
            </if>
            <if test="assistantName != null and assistantName!=''">
                (select id from assistant where assistant_name=#{assistantName}),
            </if>
            <if test="classroom != null and classroom!=''">
                #{classroom},
            </if>
            <if test="classTeacherRequirement != null and classTeacherRequirement!=''">
                #{classTeacherRequirement},
            </if>
            <if test="classRemark != null and classRemark!=''">
                #{classRemark},
            </if>
        </trim>
    </insert>
    <update id="updateClassByClassId" parameterType="com.jzy.model.dto.ClassDetailedDto">
        update class
        <set>
            class_name = #{className,jdbcType=VARCHAR},
            class_campus = #{classCampus,jdbcType=VARCHAR},
            class_grade = #{classGrade,jdbcType=VARCHAR},
            class_subject = #{classSubject,jdbcType=VARCHAR},
            class_type = #{classType,jdbcType=VARCHAR},
            class_year = #{classYear,jdbcType=VARCHAR},
            class_season = #{classSeason,jdbcType=VARCHAR},
            class_sub_season = #{classSubSeason,jdbcType=VARCHAR},
            class_time = #{classTime,jdbcType=VARCHAR},
            class_simplified_time = #{classSimplifiedTime,jdbcType=VARCHAR},
            class_times = #{classTimes,jdbcType=INTEGER},
            class_teacher_id = (select id from teacher where teacher_name=#{teacherName}),
            class_assistant_id = (select id from assistant where assistant_name=#{assistantName}),
            classroom = #{classroom,jdbcType=VARCHAR},
            class_teacher_requirement = #{classTeacherRequirement,jdbcType=VARCHAR},
            class_remark = #{classRemark,jdbcType=VARCHAR},
        </set>
        where class_id = #{classId}
    </update>
    <update id="updateClassInfo" parameterType="com.jzy.model.dto.ClassDetailedDto">
        update class c
        <set>
            <if test="classId != null and classId!=''">
                c.class_id=#{classId,jdbcType=VARCHAR},
            </if>
            c.class_name = #{className,jdbcType=VARCHAR},
            c.class_campus = #{classCampus,jdbcType=VARCHAR},
            c.class_grade = #{classGrade,jdbcType=VARCHAR},
            c.class_subject = #{classSubject,jdbcType=VARCHAR},
            c.class_type = #{classType,jdbcType=VARCHAR},
            c.class_year = #{classYear,jdbcType=VARCHAR},
            c.class_season = #{classSeason,jdbcType=VARCHAR},
            c.class_sub_season = #{classSubSeason,jdbcType=VARCHAR},
            c.class_time = #{classTime,jdbcType=VARCHAR},
            c.class_simplified_time = #{classSimplifiedTime,jdbcType=VARCHAR},
            c.class_times = #{classTimes,jdbcType=INTEGER},
            c.class_teacher_id = (select id from teacher where teacher_name=#{teacherName}),
            c.class_assistant_id = (select id from assistant where assistant_name=#{assistantName}),
            c.classroom = #{classroom,jdbcType=VARCHAR},
            c.class_teacher_requirement = #{classTeacherRequirement,jdbcType=VARCHAR},
            c.class_remark = #{classRemark,jdbcType=VARCHAR},
        </set>
        where c.id = #{id}
    </update>
    <delete id="deleteOneClassById">
        delete from class where id=#{id}
    </delete>
    <delete id="deleteManyClassesByIds">
        delete from class where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteClassesByCondition" parameterType="com.jzy.model.dto.search.ClassSearchCondition">
        delete c.* from class c left join assistant a on c.class_assistant_id = a.id left join teacher t on c.class_teacher_id = t.id
        <where>
            <if test="classYear != null and classYear!=''">
                and c.class_year=#{classYear}
            </if>
            <if test="classSeason != null and classSeason!=''">
                and c.class_season=#{classSeason}
            </if>
            <if test="classSubSeason != null and classSubSeason!=''">
                and c.class_sub_season=#{classSubSeason}
            </if>
            <if test="classCampus != null and classCampus!=''">
                and c.class_campus=#{classCampus}
            </if>
            <if test="classId != null and classId!=''">
                <bind name="classIdLike" value=" '%' + classId + '%' "/>
                and c.class_id like #{classIdLike}
            </if>
            <if test="className != null and className!=''">
                <bind name="classNameLike" value=" '%' + className + '%' "/>
                and c.class_name like #{classNameLike}
            </if>
            <if test="assistantWorkId != null and assistantWorkId!=''">
                <bind name="assistantWorkIdLike" value=" '%' + assistantWorkId + '%' "/>
                and a.assistant_work_id like #{assistantWorkIdLike}
            </if>
            <if test="assistantName != null and assistantName!=''">
                <bind name="assistantNameLike" value=" '%' + assistantName + '%' "/>
                and a.assistant_name like #{assistantNameLike}
            </if>
            <if test="teacherWorkId != null and teacherWorkId!=''">
                <bind name="teacherWorkIdLike" value=" '%' + teacherWorkId + '%' "/>
                and t.teacher_work_id like #{teacherWorkIdLike}
            </if>
            <if test="teacherName != null and teacherName!=''">
                <bind name="teacherNameLike" value=" '%' + teacherName + '%' "/>
                and t.teacher_name like #{teacherNameLike}
            </if>
            <if test="classTime != null and classTime!=''">
                <bind name="classTimeLike" value=" '%' + classTime + '%' "/>
                and c.class_time like #{classTimeLike}
            </if>
            <if test="classGrade != null and classGrade!=''">
                and c.class_grade=#{classGrade}
            </if>
            <if test="classSubject != null and classSubject!=''">
                and c.class_subject=#{classSubject}
            </if>
            <if test="classType != null and classType!=''">
                and c.class_type=#{classType}
            </if>
            <if test="classroom != null and classroom!=''">
                <bind name="classroomLike" value=" '%' + classroom + '%' "/>
                and c.classroom like #{classroomLike}
            </if>
        </where>
    </delete>
    <select id="getClassById" resultMap="BaseResultMap">
        select * from class where id=#{id};
    </select>
    <select id="getClassByClassId" resultMap="BaseResultMap">
        select * from class where class_id=#{classId};
    </select>
    <select id="listClasses" resultMap="ClassDetailedResultMap"
            parameterType="com.jzy.model.dto.search.ClassSearchCondition">
      select class_tmp.*, count(sc.id) as class_student_count, cc.classroom_capacity as classroom_capacity
        from (select c.*, a.assistant_name as assistant_name, t.teacher_name as teacher_name
        from class c left join assistant a on c.class_assistant_id = a.id left join teacher t on c.class_teacher_id = t.id
        <where>
            <if test="classYear != null and classYear!=''">
                and c.class_year=#{classYear}
            </if>
            <if test="classSeason != null and classSeason!=''">
                and c.class_season=#{classSeason}
            </if>
            <if test="classSubSeason != null and classSubSeason!=''">
                and c.class_sub_season=#{classSubSeason}
            </if>
            <if test="classCampus != null and classCampus!=''">
                and c.class_campus=#{classCampus}
            </if>
            <if test="classId != null and classId!=''">
                <bind name="classIdLike" value=" '%' + classId + '%' "/>
                and c.class_id like #{classIdLike}
            </if>
            <if test="className != null and className!=''">
                <bind name="classNameLike" value=" '%' + className + '%' "/>
                and c.class_name like #{classNameLike}
            </if>
            <if test="assistantWorkId != null and assistantWorkId!=''">
                <bind name="assistantWorkIdLike" value=" '%' + assistantWorkId + '%' "/>
                and a.assistant_work_id like #{assistantWorkIdLike}
            </if>
            <if test="assistantName != null and assistantName!=''">
                <bind name="assistantNameLike" value=" '%' + assistantName + '%' "/>
                and a.assistant_name like #{assistantNameLike}
            </if>
            <if test="teacherWorkId != null and teacherWorkId!=''">
                <bind name="teacherWorkIdLike" value=" '%' + teacherWorkId + '%' "/>
                and t.teacher_work_id like #{teacherWorkIdLike}
            </if>
            <if test="teacherName != null and teacherName!=''">
                <bind name="teacherNameLike" value=" '%' + teacherName + '%' "/>
                and t.teacher_name like #{teacherNameLike}
            </if>
            <if test="classTime != null and classTime!=''">
                <bind name="classTimeLike" value=" '%' + classTime + '%' "/>
                and c.class_time like #{classTimeLike}
            </if>
            <if test="classGrade != null and classGrade!=''">
                and c.class_grade=#{classGrade}
            </if>
            <if test="classSubject != null and classSubject!=''">
                and c.class_subject=#{classSubject}
            </if>
            <if test="classType != null and classType!=''">
                and c.class_type=#{classType}
            </if>
            <if test="classroom != null and classroom!=''">
                <bind name="classroomLike" value=" '%' + classroom + '%' "/>
                and c.classroom like #{classroomLike}
            </if>
        </where>
         ) as class_tmp left join student_class sc on sc.class_id=class_tmp.id left join student s on sc.student_id=s.id
        left join campus_classroom cc on class_tmp.class_campus=cc.campus and class_tmp.classroom=cc.classroom
        group by class_tmp.id
        <if test="isFull == 'full'">
            having count(sc.id) &gt;= cc.classroom_capacity
        </if>
        <if test="isFull == 'notFull'">
            having count(sc.id) &lt; cc.classroom_capacity
        </if>
        <if test="condition1 == 'classId'">
            order by class_tmp.class_id
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
        <if test="condition1 == 'className'">
            order by class_tmp.class_name
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
        <if test="condition1 == 'assistantName'">
            order by class_tmp.assistant_name
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
        <if test="condition1 == 'teacherName'">
            order by class_tmp.teacher_name
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
    </select>
    <select id="listAllClassIds" resultType="string">
        select class_id from class;
    </select>

    <select id="getClassDetailByClassId" resultMap="ClassDetailedResultMap">
      select c.*, a.assistant_name as assistant_name, t.teacher_name as teacher_name
        from class c left join assistant a on c.class_assistant_id = a.id left join teacher t on c.class_teacher_id = t.id
        where c.class_id=#{classId}
    </select>
    <select id="listClassesLikeClassId" resultMap="BaseResultMap">
        select c.* from class c
        <where>
            <if test="classId != null and classId!=''">
                <bind name="classIdLike" value=" '%' + classId + '%' "/>
                c.class_id like #{classIdLike}
            </if>
        </where>
        order by c.class_id
    </select>
    <select id="listClassIdsLikeClassId" resultType="string">
        select c.class_id from class c
        <where>
            <if test="classId != null and classId!=''">
                <bind name="classIdLike" value=" '%' + classId + '%' "/>
                c.class_id like #{classIdLike}
            </if>
        </where>
        order by c.class_id
    </select>
    <select id="getClassDetailById" resultMap="ClassDetailedResultMap">
      select c.*, a.assistant_name as assistant_name, t.teacher_name as teacher_name
        from class c left join assistant a on c.class_assistant_id = a.id left join teacher t on c.class_teacher_id = t.id
        where c.id=#{id}
  </select>
    <select id="listAllClasses" resultMap="BaseResultMap">
      select * from class
    </select>


</mapper>