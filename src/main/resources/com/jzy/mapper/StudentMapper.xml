<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzy.dao.StudentMapper">
    <resultMap id="BaseColumnResultMap" type="com.jzy.model.entity.BaseEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.jzy.model.entity.Student" extends="BaseColumnResultMap">
        <result column="student_id" property="studentId" jdbcType="VARCHAR"/>
        <result column="student_name" property="studentName" jdbcType="VARCHAR"/>
        <result column="student_sex" property="studentSex" jdbcType="VARCHAR"/>
        <result column="student_phone" property="studentPhone" jdbcType="VARCHAR"/>
        <result column="student_phone_backup" property="studentPhoneBackup" jdbcType="VARCHAR"/>
        <result column="student_school" property="studentSchool" jdbcType="VARCHAR"/>
        <result column="student_remark" property="studentRemark" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insertOneStudent" parameterType="com.jzy.model.entity.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId!=''">
                student_id,
            </if>
            <if test="studentName != null and studentName!=''" >
                student_name,
            </if>
            <if test="studentSex != null and studentSex!=''" >
                student_sex,
            </if>
            <if test="studentPhone != null and studentPhone!=''" >
                student_phone,
            </if>
            <if test="studentPhoneBackup != null and studentPhoneBackup!=''" >
                student_phone_backup,
            </if>
            <if test="studentSchool != null and studentSchool!=''" >
                student_school,
            </if>
            <if test="studentRemark != null and studentRemark!=''" >
                student_remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId!=''">
                #{studentId},
            </if>
            <if test="studentName != null and studentName!=''" >
                #{studentName},
            </if>
            <if test="studentSex != null and studentSex!=''" >
                #{studentSex},
            </if>
            <if test="studentPhone != null and studentPhone!=''" >
                #{studentPhone},
            </if>
            <if test="studentPhoneBackup != null and studentPhoneBackup!=''" >
                #{studentPhoneBackup},
            </if>
            <if test="studentSchool != null and studentSchool!=''" >
                #{studentSchool},
            </if>
            <if test="studentRemark != null and studentRemark!=''" >
                #{studentRemark},
            </if>
        </trim>
    </insert>
    <insert id="insertManyStudents">
        insert into student ( student_id, student_name, student_sex, student_phone, student_phone_backup, student_school, student_remark )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.studentId},
            #{item.studentName},
            #{item.studentSex},
            #{item.studentPhone},
            #{item.studentPhoneBackup},
            #{item.studentSchool},
            #{item.studentRemark})
        </foreach>
    </insert>
    <update id="updateStudentByStudentId" parameterType="com.jzy.model.entity.Student">
        update student
        <set>
            <if test="studentName != null and studentName!=''" >
              student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            student_sex = #{studentSex,jdbcType=VARCHAR},
            student_phone = #{studentPhone,jdbcType=VARCHAR},
            student_phone_backup = #{studentPhoneBackup,jdbcType=VARCHAR},
            student_school = #{studentSchool,jdbcType=VARCHAR},
            student_remark = #{studentRemark,jdbcType=VARCHAR},
        </set>
        where student_id = #{studentId}
    </update>
    <update id="updateStudentNameByStudentId" parameterType="com.jzy.model.entity.Student">
        update student
        <set>
            <if test="studentName != null and studentName!=''" >
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
        </set>
        where student_id = #{studentId}
    </update>
    <update id="updateStudentInfo" parameterType="com.jzy.model.entity.Student">
        update student
        <set>
            <if test="studentId != null  and studentId!=''">
                student_id = #{studentId,jdbcType=VARCHAR},
            </if>
            student_name = #{studentName,jdbcType=VARCHAR},
            student_sex = #{studentSex,jdbcType=VARCHAR},
            student_phone = #{studentPhone,jdbcType=VARCHAR},
            student_phone_backup = #{studentPhoneBackup,jdbcType=VARCHAR},
            student_school = #{studentSchool,jdbcType=VARCHAR},
            student_remark = #{studentRemark,jdbcType=VARCHAR},
        </set>
        where id = #{id}
    </update>
    <update id="updateStudentSchoolByStudentId" parameterType="com.jzy.model.entity.Student">
        update student set student_school=#{studentSchool} where student_id=#{studentId}
    </update>
    <update id="updateStudentNameAndPhoneByStudentId" parameterType="com.jzy.model.entity.Student">
        update student set
        student_name=#{studentName},
        student_phone=#{studentPhone},
        student_phone_backup=#{studentPhoneBackup}
        where student_id=#{studentId}
    </update>
    <delete id="deleteOneStudentById">
        delete from student where id=#{id}
    </delete>
    <delete id="deleteManyStudentsByIds">
        delete from student where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteStudentsByCondition" parameterType="com.jzy.model.dto.search.StudentSearchCondition">
        delete s.* from student s
        <where>
            <if test="studentId != null and studentId!=''">
                <bind name="studentIdLike" value=" '%' + studentId + '%' "/>
                and s.student_id like #{studentIdLike}
            </if>
            <if test="studentName != null and studentName!=''">
                <bind name="studentNameLike" value=" '%' + studentName + '%' "/>
                and s.student_name like #{studentNameLike}
            </if>
            <if test="studentSex != null and studentSex!=''">
                and s.student_sex=#{studentSex}
            </if>
            <if test="studentPhone != null and studentPhone!=''">
                <bind name="studentPhoneLike" value=" '%' + studentPhone + '%' "/>
                and s.student_phone like #{studentPhoneLike}
            </if>
            <if test="studentSchool != null and studentSchool!=''">
                <bind name="studentSchoolLike" value=" '%' + studentSchool + '%' "/>
                and s.student_school like #{studentSchoolLike}
            </if>
        </where>
    </delete>
    <select id="getStudentById" resultMap="BaseResultMap">
        select * from student where id=#{id}
    </select>
    <select id="getStudentByStudentId" resultMap="BaseResultMap">
        select * from student where student_id=#{studentId}
    </select>
    <select id="listStudents" resultMap="BaseResultMap"
            parameterType="com.jzy.model.dto.search.StudentSearchCondition">
        select * from student s
        <where>
            <if test="studentId != null and studentId!=''">
                <bind name="studentIdLike" value=" '%' + studentId + '%' "/>
                and s.student_id like #{studentIdLike}
            </if>
            <if test="studentName != null and studentName!=''">
                <bind name="studentNameLike" value=" '%' + studentName + '%' "/>
                and s.student_name like #{studentNameLike}
            </if>
            <if test="studentSex != null and studentSex!=''">
                and s.student_sex=#{studentSex}
            </if>
            <if test="studentPhone != null and studentPhone!=''">
                <bind name="studentPhoneLike" value=" '%' + studentPhone + '%' "/>
                and s.student_phone like #{studentPhoneLike}
            </if>
            <if test="studentSchool != null and studentSchool!=''">
                <bind name="studentSchoolLike" value=" '%' + studentSchool + '%' "/>
                and s.student_school like #{studentSchoolLike}
            </if>
        </where>
        <if test="condition1 == 'studentId'">
            order by s.student_id
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
        <if test="condition1 == 'studentName'">
            order by s.student_name
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
        <if test="condition1 == 'studentSchool'">
            order by s.student_school
            <if test="condition2 == 'asc'">
                asc
            </if>
            <if test="condition2 == 'desc'">
                desc
            </if>
        </if>
    </select>
    <select id="listStudentsByStudentAndClassSearchCondition" resultMap="BaseResultMap"
            parameterType="com.jzy.model.dto.search.StudentAndClassSearchCondition">
       select s0.* from student s0 where s0.id in
        (select distinct s.id from (select c.id, a.assistant_name
        from class c left join assistant a on c.class_assistant_id = a.id
        <where>
            <if test="classYear != null and classYear!=''">
                and c.class_year=#{classYear}
            </if>
            <if test="classSeason != null and classSeason!=''">
                and c.class_season=#{classSeason}
            </if>
            <if test="classSubSeason != null and classSubSeason!=''">
                and c.class_sub_season=#{classSubSeason}
            </if>
            <if test="assistantName != null and assistantName!=''">
                and a.assistant_name=#{assistantName}
            </if>
        </where>
        ) as class_tmp, student_class sc, student s
        where sc.class_id=class_tmp.id and sc.student_id=s.id)
    </select>
    <select id="listStudentsLikeStudentName" resultMap="BaseResultMap">
        select s.* from student s
        <where>
            <if test="studentName != null and studentName!=''">
                <bind name="studentNameLike" value=" '%' + studentName + '%' "/>
                s.student_name like #{studentNameLike}
            </if>
        </where>
    </select>
    <select id="listStudentsLikeStudentId" resultMap="BaseResultMap">
        select s.* from student s
        <where>
            <if test="studentId != null and studentId!=''">
                <bind name="studentIdLike" value=" '%' + studentId + '%' "/>
                s.student_id like #{studentIdLike}
            </if>
        </where>
        order by s.student_id
    </select>
</mapper>